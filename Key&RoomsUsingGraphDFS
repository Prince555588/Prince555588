// import java.util.Map;
// import java.util.HashMap;
class Solution {
    public boolean canVisitAllRooms(List<List<Integer>> rooms) {
        boolean[] visited = new boolean[rooms.size()];
        DFSHelper(rooms,0,visited);
        for(boolean visitedRoom : visited)
        {
        if(!visitedRoom)
        {
            return false;
        }
        }

        return true;
    }
    private void DFSHelper(List<List<Integer>> rooms,int currentRoom,boolean[] visited)
    {
               visited[currentRoom]=true;
               for(int key : rooms.get(currentRoom))
               {
                if(!visited[key])
                {
                    
                    DFSHelper(rooms,key,visited); // Top down recursive call
                }
               }
    
}
}
//Time & Space Complexity of Code
//Time o(V+E)*O(V+E)
//Space Complexity o(V+E)
