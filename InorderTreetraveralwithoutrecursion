import java.util.*;

class TreeNode {
    int val;
    TreeNode left, right;
    
    TreeNode(int val) {
        this.val = val;
    }
}

public class InorderTraversal {
    public static List<Integer> inorderTraversal(TreeNode root) {
        List<Integer> result = new ArrayList<>();
        Stack<TreeNode> stack = new Stack<>();
        
        TreeNode current = root;

        while (current != null || !stack.isEmpty()) {
            // Go as left as possible
            while (current != null) {
                stack.push(current);
                current = current.left;
            }

            // Now process the node
            current = stack.pop();
            result.add(current.val);

            // Move to the right subtree
            current = current.right;
        }

        return result;
    }

    // Example usage
    public static void main(String[] args) {
        /*
                1
                 \
                  2
                 /
                3
        */
        TreeNode root = new TreeNode(1);
        root.right = new TreeNode(2);
        root.right.left = new TreeNode(3);

        System.out.println(inorderTraversal(root));  // Output: [1, 3, 2]
    }
}
