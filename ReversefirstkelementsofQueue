import java.io.*;
import java.util.*;

public class GfG {  
    
  // Function to reverse first k elements of a queue.
   static Queue<Integer> reverseFirstK(Queue<Integer> q, int k) {
       moveKToEnd(q, k);
       int s = q.size() - k;
       while( s-- > 0){
           int x = q.poll();
           q.add(x);
       }
       return q;
   }
   
   static void moveKToEnd(Queue<Integer> q, int k){
       if(k == 0) return;
       int e = q.poll();
       moveKToEnd(q, k - 1);
       q.add(e);
   }
 
   // driver code
   public static void main (String[] args) {
       Queue<Integer> queue = new LinkedList<Integer>();
       queue.add(1);
       queue.add(2);
       queue.add(3);
       queue.add(4);
       queue.add(5);
       

       int k = 3;
       queue = reverseFirstK(queue, k);
       // printing queue
      while (!queue.isEmpty()) {
           System.out.print(queue.poll() + " ");
       }
   }
}
